/home/kpark8/CSC510/python_project/local/lib/python2.7/site-packages/cntk/cntk_py_init.py:90: UserWarning: 

################################################ Missing optional dependency (    MKL     ) ################################################
   CNTK may crash if the component that depends on those dependencies is loaded.
   Visit https://docs.microsoft.com/en-us/cognitive-toolkit/Setup-Linux-Python#mkl for more information.
############################################################################################################################################

  warnings.warn(WARNING_MSG % ('    MKL     ', 'https://docs.microsoft.com/en-us/cognitive-toolkit/Setup-Linux-Python#mkl'))
/home/kpark8/CSC510/python_project/local/lib/python2.7/site-packages/cntk/cntk_py_init.py:98: UserWarning: 

################################################ Missing optional dependency (GPU-Specific) ################################################
   CNTK may crash if the component that depends on those dependencies is loaded.
   Visit https://docs.microsoft.com/en-us/cognitive-toolkit/Setup-Linux-Python#optional-gpu-specific-packages for more information.
############################################################################################################################################
If you intend to use CNTK without GPU support, you can ignore the (likely) GPU-specific warning!
############################################################################################################################################

  warnings.warn(WARNING_MSG_GPU_ONLY % ('GPU-Specific', 'https://docs.microsoft.com/en-us/cognitive-toolkit/Setup-Linux-Python#optional-gpu-specific-packages'))
Selected GPU[0] GeForce GTX TITAN X as the process wide default device.
-------------------------------------------------------------------
Build info: 

		Built time: Sep 14 2018 01:27:52
		Last modified date: Fri Sep 14 00:54:25 2018
		Build type: release
		Build target: GPU
		With ASGD: yes
		Math lib: mkl
		CUDA version: 9.0.0
		CUDNN version: 7.1.4
		Build Branch: HEAD
		Build SHA1: 7c1b0fadb64f83a41739020b24fb2d4950015229
		MPI distribution: Open MPI
		MPI version: 1.10.7
-------------------------------------------------------------------
Training 1701770 parameters in 8 parameter tensors.

Learning rate per minibatch: 0.001
Finished Epoch[1 of 10]: [Training] loss = 2.245494 * 60000, metric = 79.05% * 60000 4.263s (14074.6 samples/s);
Finished Epoch[2 of 10]: [Training] loss = 1.945630 * 60000, metric = 52.42% * 60000 1.937s (30975.7 samples/s);
Finished Epoch[3 of 10]: [Training] loss = 1.215883 * 60000, metric = 32.58% * 60000 1.962s (30581.0 samples/s);
Finished Epoch[4 of 10]: [Training] loss = 0.747891 * 60000, metric = 21.95% * 60000 1.953s (30722.0 samples/s);
Finished Epoch[5 of 10]: [Training] loss = 0.573163 * 60000, metric = 17.04% * 60000 1.939s (30943.8 samples/s);
Finished Epoch[6 of 10]: [Training] loss = 0.484739 * 60000, metric = 14.45% * 60000 1.884s (31847.1 samples/s);
Finished Epoch[7 of 10]: [Training] loss = 0.430649 * 60000, metric = 12.67% * 60000 1.965s (30534.4 samples/s);
Finished Epoch[8 of 10]: [Training] loss = 0.391180 * 60000, metric = 11.72% * 60000 1.962s (30581.0 samples/s);
Finished Epoch[9 of 10]: [Training] loss = 0.360967 * 60000, metric = 10.78% * 60000 1.979s (30318.3 samples/s);
Finished Epoch[10 of 10]: [Training] loss = 0.334541 * 60000, metric = 10.02% * 60000 1.995s (30075.2 samples/s);

Final Results: Minibatch[1-11]: errs = 7.23% * 10000

Finished in 22.915877
